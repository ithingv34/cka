(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{361:function(t,n,e){t.exports=e.p+"assets/img/1-7.c9acd65e.png"},378:function(t,n,e){"use strict";e.r(n);var s=e(44),a=Object(s.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"클러스터-설치"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#클러스터-설치"}},[t._v("#")]),t._v(" 클러스터 설치")]),t._v(" "),s("p",[s("strong",[t._v("kubeadm")])]),t._v(" "),s("ul",[s("li",[t._v("저수준의 커맨드라인 도구인 "),s("code",[t._v("kubeadm")]),t._v("을 사용하여 클러스터를 설치할 수 있다.\n"),s("ul",[s("li",[s("a",{attrs:{href:"https://kubernetes.io/ko/docs/setup/production-environment/tools/kubeadm/install-kubeadm/",target:"_blank",rel:"noopener noreferrer"}},[t._v("kubeadm 설치 문서"),s("OutboundLink")],1)])])]),t._v(" "),s("li",[t._v("시험에는 "),s("code",[t._v("kubeadm")]),t._v("이 미리 설치됐다고 가정한다.")])]),t._v(" "),s("hr"),t._v(" "),s("p",[s("strong",[t._v("클러스터 설치 과정")]),t._v(" "),s("img",{staticStyle:{"margin-top":"1rem"},attrs:{src:e(361)}})]),t._v(" "),s("p",[s("strong",[t._v("ControlPlane 노드 초기화")])]),t._v(" "),s("ul",[s("li",[t._v("ControlPlane은 API 서버, etcd 등 쿠버네티스 클러스터를 관리하는데 필요한 여러 컴포넌트를 호스팅하는 역할을 담당한다.")])]),t._v(" "),s("ol",[s("li",[t._v("우선 "),s("code",[t._v("ssh")]),t._v(" 명령어로 ControlPlane 노드에 대한 쉘을 연다.\n"),s("ul",[s("li",[t._v("control plane node의 이름은 "),s("code",[t._v("kube-control-plane")])]),t._v(" "),s("li",[t._v("OS: Ubuntu 18.04.5 LTS")])])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" kube-control-plane\nWelcome to Ubuntu "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18.04")]),t._v(".5 LTS "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GNU/Linux "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.15")]),t._v(".0-132-generic x86_64"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[s("code",[t._v("kubeadm init")]),t._v(" 명령어를 사용하여 ControlPlane을 초기화한다. 그리고 다음 두 가지 옵션을 추가하여 Pod 네트워크의 IP 주소를 제공해야한다.\n"),s("ul",[s("li",[s("ol",[s("li",[s("code",[t._v("--pod-network-cidr")]),t._v(" : Classless Inter Domain Routing")])])]),t._v(" "),s("li",[s("ol",{attrs:{start:"2"}},[s("li",[s("code",[t._v("--apiserver-advertise-address")]),t._v(" : API 서버 IP주소")])])])])])]),t._v(" "),s("ul",[s("li",[t._v("콘솔의 아웃풋은 "),s("code",[t._v("kubeadm join")]),t._v(" 명령어를 렌더링한다. 이는 워커 노드들을 클러스터에 연결하는데 필요하다.")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" kubeadm init --pod-network-cidr "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.18")]),t._v(".0.0/16 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --apiserver-advertise-address "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.8")]),t._v(".8.10\n\nTo start using your cluster, you need to run the following as a regular user:\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.kube\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" -i /etc/kubernetes/admin.conf "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.kube/config\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" -u"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" -g"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.kube/config\n\nYou should now deploy a pod network to the cluster.\nRun "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kubectl apply -f [podnetwork].yaml"')]),t._v(" with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nThen you can "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),t._v(" any number of worker nodes by running the following on "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\neach as root:\n\nkubeadm "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.8")]),t._v(".8.10:6443 --token fi8io0.dtkzsy9kws56dmsp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --discovery-token-ca-cert-hash "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    sha256:cc89ea1f82d5ec460e21b69476e0c052d691d0c52cce83fbd7e403559c1ebdac\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("명령이 완료되면 방금 콘솔의 "),s("code",[t._v("init")]),t._v(" 아웃풋에서 나온 명령어를 실행하여 루트가 아닌 사용자로 클러스터를 시작한다.")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.kube\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" -i /etc/kubernetes/admin.conf "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.kube/config\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" -u"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" -g"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.kube/config\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("Pod가 서로 통신할 수 있도록 "),s("a",{attrs:{href:"https://kubernetes.io/ko/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CNI(컨테이너 네트워크 인터페이스) 플러그인"),s("OutboundLink")],1),t._v("을 배포해야한다. "),s("a",{attrs:{href:"https://kubernetes.io/docs/concepts/cluster-administration/addons/#networking-and-network-policy",target:"_blank",rel:"noopener noreferrer"}},[t._v("쿠버네티스 문서"),s("OutboundLink")],1),t._v("에 있는 "),s("code",[t._v("Flannel")]),t._v(", "),s("code",[t._v("Calico")]),t._v(" , "),s("code",[t._v("Weave")]),t._v(" 와 같은 인기있는 Plugin을 선택할 수 있다.\n"),s("ul",[s("li",[t._v("CKA 시험에서는 특정 추가 기능을 설치하도록 요청할 가능성이 높다.")]),t._v(" "),s("li",[t._v("다음은 Weave CNI의 설치 지침을 따른 것이다.")])])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ kubectl apply -f "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://cloud.weave.works/k8s/net?k8s-version= \\\n  '),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("kubectl version "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" base64 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tr")]),t._v(" -d "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\n'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),t._v("\nserviceaccount/weave-net created\nclusterrole.rbac.authorization.k8s.io/weave-net created\nclusterrolebinding.rbac.authorization.k8s.io/weave-net created\nrole.rbac.authorization.k8s.io/weave-net created\nrolebinding.rbac.authorization.k8s.io/weave-net created\ndaemonset.apps/weave-net created\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[t._v("ControlPlane 노드가 "),s("code",[t._v("Ready")]),t._v(" 상태인지 확인하자. "),s("code",[t._v("NotReady")]),t._v(" 상태에서 "),s("code",[t._v("Ready")]),t._v(" 상태로 바뀌기까지 시간이 걸린다.")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ kubectl get nodes\nNAME                 STATUS   ROLES                  AGE   VERSION\nkube-control-plane   Ready    control-plane,master   24m   v1.21.2\n")])])]),s("ol",{attrs:{start:"6"}},[s("li",[t._v("ControlPlane에서 exit 한다.")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("logout")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),s("hr"),t._v(" "),s("p",[s("strong",[t._v("Worker Node 결합하기")])]),t._v(" "),s("p",[t._v("Worker 노드는 ControlPlane에서 예약한 워크로드를 처리한다. 워크로드의 예로 Pod, Deployments, Job, CronJob 등이 있다. Worker 노드를 ControlPlane 노드에 연결하기 위해서는 몇가지 작업이 필요하다.")]),t._v(" "),s("ol",[s("li",[t._v("우선 "),s("code",[t._v("ssh")]),t._v(" 명령어로 Worker 노드에 대한 쉘을 연다.\n"),s("ul",[s("li",[t._v("control plane node의 이름은 "),s("code",[t._v("kube-worker-1")])]),t._v(" "),s("li",[t._v("OS: Ubuntu 18.04.5 LTS")])])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" kube-worker-1\nWelcome to Ubuntu "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18.04")]),t._v(".5 LTS "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GNU/Linux "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.15")]),t._v(".0-132-generic x86_64"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("ControlPlane에서 실행한 "),s("code",[t._v("kubeadm init")]),t._v(" 명령어의 아웃풋에서 나온 "),s("code",[t._v("kubeadm join")]),t._v(" 명령어를 실행한다.\n"),s("ul",[s("li",[t._v("토큰값과 SHA256 hash 값은 다를 수 있다.")])])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" kubeadm "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.8")]),t._v(".8.10:6443 --token fi8io0.dtkzsy9kws56dmsp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --discovery-token-ca-cert-hash "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  sha256:cc89ea1f82d5ec460e21b69476e0c052d691d0c52cce83fbd7e403559c1ebdac\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("preflight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Running pre-flight checks\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("preflight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Reading configuration from the cluster"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("preflight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" FYI: You can "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("look")]),t._v(" at this config "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" with "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'kubectl -n kube-system get cm kubeadm-config -o yaml'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubelet-start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Writing kubelet configuration to "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/var/lib/kubelet/config.yaml"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubelet-start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Writing kubelet environment "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" with "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\nflags to "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/var/lib/kubelet/kubeadm-flags.env"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubelet-start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Starting the kubelet\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubelet-start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Waiting "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the kubelet to perform the TLS Bootstrap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\nThis "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" has joined the cluster:\n* Certificate signing request was sent to apiserver and a response was received.\n* The Kubelet was informed of the new secure connection details.\n\nRun "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'kubectl get nodes'")]),t._v(" on the control plane to see this "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),t._v(" the cluster.\n\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("ContolPlane 노드에 접속해서 "),s("code",[t._v("kubectl get nodes")]),t._v(" 를 입력한다.")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" kube-control-plane\nWelcome to Ubuntu "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18.04")]),t._v(".5 LTS "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GNU/Linux "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.15")]),t._v(".0-132-generic x86_64"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n$ kubectl get nodes\nNAME                 STATUS   ROLES                  AGE     VERSION\nkube-control-plane   Ready    control-plane,master   5h49m   v1.21.2\nkube-worker-1        Ready    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("                 15m     v1.21.2\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("과정을 따라오면서 문제가 생겼다면 "),s("a",{attrs:{href:"https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/#optional-controlling-your-cluster-from-machines-other-than-the-control-plane-node",target:"_blank",rel:"noopener noreferrer"}},[t._v("공식 문서"),s("OutboundLink")],1),t._v("를 참고하자.")])])])}),[],!1,null,null,null);n.default=a.exports}}]);